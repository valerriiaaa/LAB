// –î—ñ–∞–ª–æ–≥ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
function userDialog() {
    let choice;
    let attempts = 0;

    do {
        choice = prompt("–Ø–∫–∏–π —Ä–æ–∑–¥—ñ–ª –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å –Ω–∞–π–±—ñ–ª—å—à–µ?\n1 - –†–æ–º–∞–Ω–∏\n2 - –û–≥–ª—è–¥–∏\n3 - –ê–≤—Ç–æ—Ä–∏");
        attempts++;
        if (choice === "1") {
            alert("–†–æ–∑–¥—ñ–ª '–†–æ–º–∞–Ω–∏' –º—ñ—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–ª–∞—Å–∏—á–Ω–∏—Ö —ñ —Å—É—á–∞—Å–Ω–∏—Ö —Ç–≤–æ—Ä—ñ–≤.");
        } else if (choice === "2") {
            alert("–£ —Ä–æ–∑–¥—ñ–ª—ñ '–û–≥–ª—è–¥–∏' –≤–∏ –∑–Ω–∞–π–¥–µ—Ç–µ —Ä–µ—Ü–µ–Ω–∑—ñ—ó —Ç–∞ –¥—É–º–∫–∏ —á–∏—Ç–∞—á—ñ–≤.");
        } else if (choice === "3") {
            alert("–†–æ–∑–¥—ñ–ª '–ê–≤—Ç–æ—Ä–∏' –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–∏—Å—å–º–µ–Ω–Ω–∏–∫—ñ–≤.");
        } else {
            alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 3.");
        }
    } while ((choice !== "1" && choice !== "2" && choice !== "3") && attempts < 3);
}

// –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞
function showDeveloperInfo(surname, name, position = "–≤–µ–±-—Ä–æ–∑—Ä–æ–±–Ω–∏–∫") {
    alert(`–†–æ–∑—Ä–æ–±–Ω–∏–∫ —Å—Ç–æ—Ä—ñ–Ω–∫–∏:\n${surname} ${name}\n–ü–æ—Å–∞–¥–∞: ${position}`);
}

//–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –¥–≤–æ—Ö —Ä—è–¥–∫—ñ–≤
function compareStrings() {
    var str1 = document.getElementById("string1").textContent;
    var str2 = document.getElementById("string2").textContent;

    if (str1.length > str2.length) {
        alert(`–†—è–¥–æ–∫ –∑ –±—ñ–ª—å—à–æ—é –¥–æ–≤–∂–∏–Ω–æ—é: "${str1}"`);
    } else if (str2.length > str1.length) {
        alert(`–†—è–¥–æ–∫ –∑ –±—ñ–ª—å—à–æ—é –¥–æ–≤–∂–∏–Ω–æ—é: "${str2}"`);
    } else {
        alert(`–†—è–¥–∫–∏ –æ–¥–Ω–∞–∫–æ–≤–æ—ó –¥–æ–≤–∂–∏–Ω–∏: "${str1}" —Ç–∞ "${str2}"`);
    }
}

// –§–æ–Ω –Ω–∞ 30 —Å–µ–∫—É–Ω–¥
function changeBackgroundTemporarily() {
    const originalColor = document.body.style.backgroundColor;
    document.body.style.backgroundColor = "#fceabb"; 

    setTimeout(() => {
        document.body.style.backgroundColor = originalColor;
    }, 30000); 
}

// –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —ñ–Ω—à—É —Å—Ç–æ—Ä—ñ–Ω–∫—É —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
function redirectAfterDelay() {
    setTimeout(() => {
        location.href = "novels.html";
    }, 15000); 
}

// 4. –í—Å—Ç–∞–≤–∫–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —ñ —Ä–æ–±–æ—Ç–∞ –∑ –≤—É–∑–ª–∞–º–∏
function manipulateDOM() {
    const container = document.querySelector(".announcement");

    // innerHTML / outerHTML / textContent / data
    const announcementText = container.querySelector(".announcement-text");
    console.log("innerHTML:", announcementText.innerHTML);
    console.log("outerHTML:", announcementText.outerHTML);
    console.log("textContent:", announcementText.textContent);
    console.log("nodeValue/data:", announcementText.firstChild?.data || "–Ω–µ–º–∞—î —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤—É–∑–ª–∞");

    // createElement, createTextNode, append, prepend, after
    const newPara = document.createElement("p");
    const textNode = document.createTextNode("‚ú® –î—è–∫—É—î–º–æ, —â–æ –∑–∞–≤—ñ—Ç–∞–ª–∏ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç –ø—Ä–æ –∫–Ω–∏–≥–∏!");
    newPara.appendChild(textNode);
    container.append(newPara); // –¥–æ–¥–∞—î –≤ –∫—ñ–Ω–µ—Ü—å

    const welcome = document.createElement("h4");
    welcome.textContent = "üëã –í—ñ—Ç–∞—î–º–æ, –∫–Ω–∏–≥–æ–ª—é–±–µ!";
    container.prepend(welcome); // –¥–æ–¥–∞—î –Ω–∞ –ø–æ—á–∞—Ç–æ–∫

    const note = document.createElement("div");
    note.textContent = "–û—Ü—ñ–Ω—ñ—Ç—å –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ñ –Ω–æ–≤–∏–Ω–∫–∏ —Ç–∞ —Å–≤—ñ—Ç–æ–≤—É –∫–ª–∞—Å–∏–∫—É!";
    container.after(note); // –ø—ñ—Å–ª—è –±–ª–æ–∫—É

    // replaceWith
    const oldHeading = document.querySelector("h1");
    const newHeading = document.createElement("h1");
    newHeading.textContent = "üìñ –õ—ñ—Ç–µ—Ä–∞—Ç—É—Ä–Ω–∞ –ø–æ–¥–æ—Ä–æ–∂ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è!";
    oldHeading.replaceWith(newHeading);

    // remove 
    const banner = document.getElementById("banner");
    banner.remove();
}

function highlightLinks() {

    const links = document.querySelectorAll(".section a");
    console.log(links);
    links.forEach(link => {
        link.style.backgroundColor = "#87CEFA"; 
        link.style.border = "1px solid rgb(13, 63, 170)";
        link.style.padding = "4px";
        link.style.borderRadius = "5px";
    });

}

function writeWelcomeMessage() {
    document.write("<p style='color: white; font-weight: bold;'>üìÖ –°—å–æ–≥–æ–¥–Ω—ñ: " + new Date().toLocaleDateString("uk-UA") + "</p>");
}

//userDialog();
//showDeveloperInfo("–¢–µ–º–∫–æ", "–í–∞–ª–µ—Ä—ñ—è");
//compareStrings();
//changeBackgroundTemporarily();
//redirectAfterDelay();
//manipulateDOM();
//highlightLinks();
writeWelcomeMessage();

// 1. –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —á–µ—Ä–µ–∑ –∞—Ç—Ä–∏–±—É—Ç
function highlightRow(el) {
    el.style.backgroundColor = "#7aa8ed";
}

// 2. –û–±—Ä–æ–±–Ω–∏–∫ —á–µ—Ä–µ–∑ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å
const heading = document.querySelector('h1');

    heading.onmouseover = function() {
        heading.style.fontSize = "42px";
    };

    heading.onmouseout = function() {
        heading.style.fontSize = "36px";
    };

// 3. –ú–µ—Ç–æ–¥ addEventListener: –∫—ñ–ª—å–∫–∞ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–æ –æ–¥–Ω—ñ—î—ó –ø–æ–¥—ñ—ó
const buttons = document.querySelectorAll('.toggleDescriptionBtn');

  buttons.forEach(button => {
    button.addEventListener('click', () => {
      const description = button.nextElementSibling; // <p> –π–¥–µ –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è <button>

      if (description.style.display === 'none') {
        description.style.display = 'block';
        button.textContent = '–°—Ö–æ–≤–∞—Ç–∏ –æ–ø–∏—Å';
      } else {
        description.style.display = 'none';
        button.textContent = '–ü–æ–∫–∞–∑–∞—Ç–∏ –æ–ø–∏—Å –∫–Ω–∏–≥–∏';
      }
    });
  });

// 4. –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó —è–∫ –æ–±'—î–∫—Ç –∑ handleEvent
const bookClickHandler = {
    handleEvent(event) {
        alert("–í–∏ –Ω–∞—Ç–∏—Å–Ω—É–ª–∏ –Ω–∞ –∫–Ω–∏–≥—É: " + event.currentTarget.innerText.trim());
        event.currentTarget.removeEventListener("click", bookClickHandler);
    }
};

document.addEventListener("DOMContentLoaded", () => {
    const bookLinks = document.querySelectorAll("td:nth-child(2) a"); // –í–∏–±—ñ—Ä –¥—Ä—É–≥–æ–≥–æ —Å—Ç–æ–≤–ø—Ü—è - –Ω–∞–∑–≤–∏ –∫–Ω–∏–≥
    bookLinks.forEach(link => {
        link.addEventListener("click", bookClickHandler);
    });
});

// 5. –ü—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Å–ø–∏—Å–∫—É <ul>
document.querySelector("#list-reviews").onclick = function(event) {
    if (event.target.tagName === "LI") {
        // –ó–Ω—ñ–º–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—é –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
        document.querySelectorAll("ul li").forEach(li => li.classList.remove("active"));
        // –î–æ–¥–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –¥–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
        event.target.classList.add("active");
    }
};


document.querySelector(".menu").onclick = function(event) {
    const button = event.target.closest("button");
    if (!button) return;

    const action = button.dataset.action;
    if (!action) return;

    const countSpan = button.querySelector(".count");
    let count = parseInt(button.getAttribute("data-count"), 10) || 0;

    count++;
    button.setAttribute("data-count", count);
    countSpan.textContent = count;
};
